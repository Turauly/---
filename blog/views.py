from rest_framework import viewsets, permissions, status
from rest_framework.permissions import IsAuthenticated
from rest_framework.views import APIView
from rest_framework.response import Response
from django.http import JsonResponse
from django.shortcuts import get_object_or_404

from .models import Post, Comment
from .serializers import PostSerializer, CommentSerializer


# üè† API –±–∞—Å—Ç—ã –±–µ—Ç—ñ
def home(request):
    return JsonResponse(
        {'message': '“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –ë“±–ª Mini-Blog API –±–∞—Å—Ç—ã –±–µ—Ç—ñ.'},
        json_dumps_params={'ensure_ascii': False}
    )


# üîê –ê–≤—Ç–æ—Ä “ì–∞–Ω–∞ ”©“£–¥–µ–π –∞–ª–∞–¥—ã, –±–∞—Å“õ–∞–ª–∞—Ä —Ç–µ–∫ –æ“õ–∏ –∞–ª–∞–¥—ã
class IsOwnerOrReadOnly(permissions.BasePermission):
    def has_object_permission(self, request, view, obj):
        return request.method in permissions.SAFE_METHODS or obj.author == request.user


# üì¨ –ü–æ—Å—Ç—Ç–∞—Ä–º–µ–Ω –∂“±–º—ã—Å
class PostViewSet(viewsets.ModelViewSet):
    serializer_class = PostSerializer
    permission_classes = [IsAuthenticated, IsOwnerOrReadOnly]

    def get_queryset(self):
        # üîí –¢–µ–∫ ”©–∑ –ø–æ—Å—Ç—Ç–∞—Ä—ã
        return Post.objects.filter(author=self.request.user).order_by('-created_at')

    def perform_create(self, serializer):
        serializer.save(author=self.request.user)


# üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π–ª–µ—Ä–º–µ–Ω –∂“±–º—ã—Å
class CommentViewSet(viewsets.ModelViewSet):
    serializer_class = CommentSerializer
    permission_classes = [IsAuthenticated, IsOwnerOrReadOnly]

    def get_queryset(self):
        post_id = self.kwargs['post_pk']
        return Comment.objects.filter(post_id=post_id, author=self.request.user)

    def perform_create(self, serializer):
        post = get_object_or_404(Post, pk=self.kwargs['post_pk'])
        serializer.save(author=self.request.user, post=post)


# üö™ –õ–æ–≥–∞—É—Ç (—Ç–æ–∫–µ–Ω–¥—ñ –∂–æ—è–¥—ã)
class LogoutView(APIView):
    permission_classes = [IsAuthenticated]

    def post(self, request):
        request.user.auth_token.delete()
        return Response({"message": "–°—ñ–∑ –∂“Ø–π–µ–¥–µ–Ω —Å”ô—Ç—Ç—ñ —à—ã“õ—Ç—ã“£—ã–∑."}, status=status.HTTP_200_OK)
