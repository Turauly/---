from pathlib import Path

# üìÅ –ë–∞–∑–∞–ª—ã“õ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
BASE_DIR = Path(__file__).resolve().parent.parent

# üö® “ö–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫
SECRET_KEY = 'django-insecure-v)__f!qfql4sew4^%f2825rdond$v=v4l4hqiu1@b&x4y+xx6k'
DEBUG = True
ALLOWED_HOSTS = []

# üì¶ –û—Ä–Ω–∞—Ç—ã–ª“ì–∞–Ω “õ–æ—Å—ã–º—à–∞–ª–∞—Ä
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # üåê “Æ—à—ñ–Ω—à—ñ —Ç–∞—Ä–∞–ø –∫—ñ—Ç–∞–ø—Ö–∞–Ω–∞–ª–∞—Ä
    'rest_framework',
    'rest_framework.authtoken',

    # üß© –°—ñ–∑–¥—ñ“£ “õ–æ–ª–¥–∞–Ω–±–∞
    'blog',
]

# üåê Middleware (–æ—Ä—Ç–∞–ª—ã“õ –∂“Ø–π–µ–ª–µ—Ä)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# üîó URL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã
ROOT_URLCONF = 'miniblog.urls'

# üñºÔ∏è –®–∞–±–ª–æ–Ω –∂“Ø–π–µ—Å—ñ
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# üöÄ WSGI
WSGI_APPLICATION = 'miniblog.wsgi.application'

# üíæ –î–µ—Ä–µ–∫“õ–æ—Ä (SQLite ‚Äî —Å–µ—Å—Å–∏—è “Ø—à—ñ–Ω –∂–µ—Ç–∫—ñ–ª—ñ–∫—Ç—ñ)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# üîê “ö“±–ø–∏—è—Å”©–∑ –≤–∞–ª–∏–¥–∞—Ü–∏—è—Å—ã
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# üåç –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Almaty'  # ‚è∞ ”©–∑ “õ–∞–ª–∞“£—ã–∑“ì–∞ “õ–∞—Ä–∞–π —Ä–µ—Ç—Ç–µ“£—ñ–∑
USE_I18N = True
USE_TZ = True

# üìÅ –°—Ç–∞—Ç–∏–∫–∞–ª—ã“õ —Ñ–∞–π–ª–¥–∞—Ä
STATIC_URL = 'static/'

# üÜî ”ò–¥–µ–ø–∫—ñ –∞–≤—Ç–æ ”©—Ä—ñ—Å
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# üîê DRF –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–µ–Ω —Ä“±“õ—Å–∞—Ç)
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}
